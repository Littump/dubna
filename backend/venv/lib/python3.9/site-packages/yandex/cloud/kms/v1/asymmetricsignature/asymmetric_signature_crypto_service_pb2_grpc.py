# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from yandex.cloud.kms.v1.asymmetricsignature import asymmetric_signature_crypto_service_pb2 as yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2


class AsymmetricSignatureCryptoServiceStub(object):
    """Data plane for KMS symmetric cryptography operations

    Set of methods that perform asymmetric signature.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Sign = channel.unary_unary(
                '/yandex.cloud.kms.v1.asymmetricsignature.AsymmetricSignatureCryptoService/Sign',
                request_serializer=yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricSignRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricSignResponse.FromString,
                )
        self.SignHash = channel.unary_unary(
                '/yandex.cloud.kms.v1.asymmetricsignature.AsymmetricSignatureCryptoService/SignHash',
                request_serializer=yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricSignHashRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricSignHashResponse.FromString,
                )
        self.GetPublicKey = channel.unary_unary(
                '/yandex.cloud.kms.v1.asymmetricsignature.AsymmetricSignatureCryptoService/GetPublicKey',
                request_serializer=yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricGetPublicKeyRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricGetPublicKeyResponse.FromString,
                )


class AsymmetricSignatureCryptoServiceServicer(object):
    """Data plane for KMS symmetric cryptography operations

    Set of methods that perform asymmetric signature.
    """

    def Sign(self, request, context):
        """Signs data specified KMS key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignHash(self, request, context):
        """Signs hash value specified KMS key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPublicKey(self, request, context):
        """Gets value of public key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AsymmetricSignatureCryptoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Sign': grpc.unary_unary_rpc_method_handler(
                    servicer.Sign,
                    request_deserializer=yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricSignRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricSignResponse.SerializeToString,
            ),
            'SignHash': grpc.unary_unary_rpc_method_handler(
                    servicer.SignHash,
                    request_deserializer=yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricSignHashRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricSignHashResponse.SerializeToString,
            ),
            'GetPublicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPublicKey,
                    request_deserializer=yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricGetPublicKeyRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricGetPublicKeyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'yandex.cloud.kms.v1.asymmetricsignature.AsymmetricSignatureCryptoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AsymmetricSignatureCryptoService(object):
    """Data plane for KMS symmetric cryptography operations

    Set of methods that perform asymmetric signature.
    """

    @staticmethod
    def Sign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/yandex.cloud.kms.v1.asymmetricsignature.AsymmetricSignatureCryptoService/Sign',
            yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricSignRequest.SerializeToString,
            yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricSignResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/yandex.cloud.kms.v1.asymmetricsignature.AsymmetricSignatureCryptoService/SignHash',
            yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricSignHashRequest.SerializeToString,
            yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricSignHashResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPublicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/yandex.cloud.kms.v1.asymmetricsignature.AsymmetricSignatureCryptoService/GetPublicKey',
            yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricGetPublicKeyRequest.SerializeToString,
            yandex_dot_cloud_dot_kms_dot_v1_dot_asymmetricsignature_dot_asymmetric__signature__crypto__service__pb2.AsymmetricGetPublicKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
