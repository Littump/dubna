# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from yandex.cloud.cdn.v1 import raw_logs_service_pb2 as yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2
from yandex.cloud.operation import operation_pb2 as yandex_dot_cloud_dot_operation_dot_operation__pb2


class RawLogsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Activate = channel.unary_unary(
                '/yandex.cloud.cdn.v1.RawLogsService/Activate',
                request_serializer=yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.ActivateRawLogsRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
                )
        self.Deactivate = channel.unary_unary(
                '/yandex.cloud.cdn.v1.RawLogsService/Deactivate',
                request_serializer=yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.DeactivateRawLogsRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
                )
        self.Get = channel.unary_unary(
                '/yandex.cloud.cdn.v1.RawLogsService/Get',
                request_serializer=yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.GetRawLogsRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.GetRawLogsResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/yandex.cloud.cdn.v1.RawLogsService/Update',
                request_serializer=yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.UpdateRawLogsRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
                )


class RawLogsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Activate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Deactivate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RawLogsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Activate': grpc.unary_unary_rpc_method_handler(
                    servicer.Activate,
                    request_deserializer=yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.ActivateRawLogsRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Deactivate': grpc.unary_unary_rpc_method_handler(
                    servicer.Deactivate,
                    request_deserializer=yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.DeactivateRawLogsRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.GetRawLogsRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.GetRawLogsResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.UpdateRawLogsRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'yandex.cloud.cdn.v1.RawLogsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RawLogsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Activate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/yandex.cloud.cdn.v1.RawLogsService/Activate',
            yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.ActivateRawLogsRequest.SerializeToString,
            yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Deactivate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/yandex.cloud.cdn.v1.RawLogsService/Deactivate',
            yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.DeactivateRawLogsRequest.SerializeToString,
            yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/yandex.cloud.cdn.v1.RawLogsService/Get',
            yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.GetRawLogsRequest.SerializeToString,
            yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.GetRawLogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/yandex.cloud.cdn.v1.RawLogsService/Update',
            yandex_dot_cloud_dot_cdn_dot_v1_dot_raw__logs__service__pb2.UpdateRawLogsRequest.SerializeToString,
            yandex_dot_cloud_dot_operation_dot_operation__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
